import { Prisma, PrismaClient } from '@prisma/client'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useState } from 'react'
import styles from '../styles/Home.module.css'

const prisma = new PrismaClient()

interface Contact {
  id: string
  firstName: string
  lastName: string
  email: string
  avatar: string
}

type Props = {
  contacts: Contact[]
}

async function saveContact(
  // contact: Omit<Contact, 'id'>
  contact: Prisma.ContactCreateInput
) {
  const response = await fetch('/api/contacts', {
    method: 'POST',
    body: JSON.stringify(contact)
  })

  if (!response.ok) {
    throw new Error(response.statusText)
  }

  return await response.json()
}

const Home: NextPage<Props> = ({ contacts }: Props) => {
  const [firstName, setFirstName] = useState('')
  const [lastName, setLastName] = useState('')
  const [email, setEmail] = useState('')
  const [avatar, setAvatar] = useState('')

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {contacts?.map((contact) => (
        <div key={contact.id} style={{ margin: '10px', border: '1px solid red' }}>
          <div>{contact.firstName}</div>
          <div>{contact.lastName}</div>
          <div>{contact.email}</div>
        </div>
      ))}

      <input
        value={firstName}
        onChange={(e) => setFirstName(e.target.value)}
        placeholder="First Name"
      />
      <input
        value={lastName}
        onChange={(e) => setLastName(e.target.value)}
        placeholder="Last Name"
      />
      <input
        value={email}
        onChange={(e) => setEmail(e.target.value)}
        placeholder="email"
      />
      <input
        value={avatar}
        onChange={(e) => setAvatar(e.target.value)}
        placeholder="avatar"
      />
      <button onClick={() => saveContact({
        firstName,
        lastName,
        email,
        avatar
      })}>save</button>
    </div>
  )
}

export const getStaticProps = async () => {
  const contacts = await prisma.contact.findMany()
  return {
    props: {
      contacts
    }
  }
}

export default Home
